{
  "_args": [
    [
      {
        "raw": "pug-load@^2.0.11",
        "scope": null,
        "escapedName": "pug-load",
        "name": "pug-load",
        "rawSpec": "^2.0.11",
        "spec": ">=2.0.11 <3.0.0",
        "type": "range"
      },
      "/Users/yarivkatz/Development/workspace/lectures/node-pa/06-express-views/node_modules/pug"
    ]
  ],
  "_from": "pug-load@>=2.0.11 <3.0.0",
  "_id": "pug-load@2.0.11",
  "_inCache": true,
  "_location": "/pug-load",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pug-load_2.0.11_1520526756168_0.10694919367776734"
  },
  "_npmUser": {
    "name": "forbeslindesay",
    "email": "forbes@lindesay.co.uk"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "pug-load@^2.0.11",
    "scope": null,
    "escapedName": "pug-load",
    "name": "pug-load",
    "rawSpec": "^2.0.11",
    "spec": ">=2.0.11 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pug"
  ],
  "_resolved": "https://npm.nerdeez.com/pug-load/-/pug-load-2.0.11/e648e57ed113fe2c1f45d57858ea2bad6bc01527.tgz",
  "_shasum": "e648e57ed113fe2c1f45d57858ea2bad6bc01527",
  "_shrinkwrap": null,
  "_spec": "pug-load@^2.0.11",
  "_where": "/Users/yarivkatz/Development/workspace/lectures/node-pa/06-express-views/node_modules/pug",
  "author": {
    "name": "ForbesLindesay"
  },
  "bugs": {
    "url": "https://github.com/pugjs/pug-load/issues"
  },
  "dependencies": {
    "object-assign": "^4.1.0",
    "pug-walk": "^1.1.7"
  },
  "description": "The Pug loader is responsible for loading the depenendencies of a given Pug file.",
  "devDependencies": {
    "pug-lexer": "^4.0.0",
    "pug-parser": "^5.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e648e57ed113fe2c1f45d57858ea2bad6bc01527",
    "tarball": "http://npm.nerdeez.com/pug-load/-/pug-load-2.0.11/e648e57ed113fe2c1f45d57858ea2bad6bc01527.tgz",
    "fileCount": 14,
    "unpackedSize": 13862
  },
  "homepage": "https://github.com/pugjs/pug-load#readme",
  "keywords": [
    "pug"
  ],
  "license": "MIT",
  "licenseText": "Copyright (c) 2015 Forbes Lindesay\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "maintainers": [
    {
      "name": "timothygu",
      "email": "timothygu99@gmail.com"
    }
  ],
  "name": "pug-load",
  "optionalDependencies": {},
  "readme": "# pug-load\n\nThe pug loader is responsible for loading the depenendencies of a given pug file.  It adds `fullPath` and `str` properties to every `Include` and `Extends` node.  It also adds an `ast` property to any `Include` nodes that are loading pug and any `Extends` nodes.  It then recursively loads the dependencies of any of those included files.\n\n[![Build Status](https://img.shields.io/travis/pugjs/pug-load/master.svg)](https://travis-ci.org/pugjs/pug-load)\n[![Dependency Status](https://img.shields.io/david/pugjs/pug-load.svg)](https://david-dm.org/pugjs/pug-load)\n[![NPM version](https://img.shields.io/npm/v/pug-load.svg)](https://www.npmjs.org/package/pug-load)\n[![Coverage Status](https://img.shields.io/codecov/c/github/pugjs/pug-load.svg)](https://codecov.io/gh/pugjs/pug-load)\n\n## Installation\n\n    npm install pug-load\n\n## Usage\n\n```js\nvar load = require('pug-load');\n```\n\n### `load(ast, options)`\n### `load.string(str, filename, options)`\n### `load.file(filename, options)`\n\nLoads all dependencies of the Pug AST. `load.string` and `load.file` are syntactic sugar that parses the string or file instead of you doing it yourself.\n\n`options` may contain the following properties:\n\n- `lex` (function): **(required)** the lexer used\n- `parse` (function): **(required)** the parser used\n- `resolve` (function): a function used to override `load.resolve`. Defaults to `load.resolve`.\n- `read` (function): a function used to override `load.read`. Defaults to `load.read`.\n- `basedir` (string): the base directory of absolute inclusion. This is **required** when absolute inclusion (file name starts with `'/'`) is used. Defaults to undefined.\n\nThe `options` object is passed to `load.resolve` and `load.read`, or equivalently `options.resolve` and `options.read`.\n\n### `load.resolve(filename, source, options)`\n\nCallback used by `pug-load` to resolve the full path of an included or extended file given the path of the source file.\n\n`filename` is the included file. `source` is the name of the parent file that includes `filename`.\n\nThis function is not meant to be called from outside of `pug-load`, but rather for you to override.\n\n### `load.read(filename, options)`\n\nCallback used by `pug-load` to return the contents of a file.\n\n`filename` is the file to read.\n\nThis function is not meant to be called from outside of `pug-load`, but rather for you to override.\n\n### `load.validateOptions(options)`\n\nCallback used `pug-load` to ensure the options object is valid. If your overriden `load.resolve` or `load.read` uses a different `options` scheme, you will need to override this function as well.\n\nThis function is not meant to be called from outside of `pug-load`, but rather for you to override.\n\n### Example\n\n```js\nvar fs = require('fs');\nvar lex = require('pug-lexer');\nvar parse = require('pug-parser');\nvar load = require('pug-load');\n\n// you can do everything very manually\n\nvar str = fs.readFileSync('bar.pug', 'utf8');\nvar ast = load(parse(lex(str, 'bar.pug'), 'bar.pug'), {\n  lex: lex,\n  parse: parse,\n  resolve: function (filename, source, options) {\n    console.log('\"' + filename + '\" file requested from \"' + source + '\".');\n    return load.resolve(filename, source, options);\n  }\n});\n\n// or you can do all that in just two steps\n\nvar str = fs.readFileSync('bar.pug', 'utf8');\nvar ast = load.string(str, 'bar.pug', {\n  lex: lex,\n  parse: parse,\n  resolve: function (filename, source, options) {\n    console.log('\"' + filename + '\" file requested from \"' + source + '\".');\n    return load.resolve(filename, source, options);\n  }\n});\n\n// or you can do all that in only one step\n\nvar ast = load.file('bar.pug', {\n  lex: lex,\n  parse: parse,\n  resolve: function (filename, source, options) {\n    console.log('\"' + filename + '\" file requested from \"' + source + '\".');\n    return load.resolve(filename, source, options);\n  }\n});\n```\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pugjs/pug-load.git"
  },
  "version": "2.0.11"
}
