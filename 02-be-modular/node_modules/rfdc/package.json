{
  "_args": [
    [
      {
        "raw": "rfdc@^1.1.2",
        "scope": null,
        "escapedName": "rfdc",
        "name": "rfdc",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/Users/yarivkatz/Development/workspace/lectures/node-pa/02-be-modular/node_modules/log4js"
    ]
  ],
  "_from": "rfdc@>=1.1.2 <2.0.0",
  "_id": "rfdc@1.1.2",
  "_inCache": true,
  "_location": "/rfdc",
  "_nodeVersion": "10.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rfdc_1.1.2_1526816812927_0.3385372245394702"
  },
  "_npmUser": {
    "name": "davidmarkclements",
    "email": "huperekchuno@googlemail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rfdc@^1.1.2",
    "scope": null,
    "escapedName": "rfdc",
    "name": "rfdc",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/log4js"
  ],
  "_resolved": "https://npm.nerdeez.com/rfdc/-/rfdc-1.1.2/e6e72d74f5dc39de8f538f65e00c36c18018e349.tgz",
  "_shasum": "e6e72d74f5dc39de8f538f65e00c36c18018e349",
  "_shrinkwrap": null,
  "_spec": "rfdc@^1.1.2",
  "_where": "/Users/yarivkatz/Development/workspace/lectures/node-pa/02-be-modular/node_modules/log4js",
  "author": {
    "name": "David Mark Clements",
    "email": "david.clements@nearform.com"
  },
  "bugs": {
    "url": "https://github.com/davidmarkclements/rfdc/issues"
  },
  "dependencies": {},
  "description": "Really Fast Deep Clone",
  "devDependencies": {
    "deep-copy": "^1.4.2",
    "fast-copy": "^1.2.1",
    "fastbench": "^1.0.1",
    "lodash.clonedeep": "^4.5.0",
    "standard": "^11.0.1",
    "tap": "^12.0.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-92ktAgvZhBzYTIK0Mja9uen5q5J3NRVMoDkJL2VMwq6SXjVCgqvQeVP2XAaUY6HT+XpQYeLSjb3UoitBryKmdA==",
    "shasum": "e6e72d74f5dc39de8f538f65e00c36c18018e349",
    "tarball": "http://npm.nerdeez.com/rfdc/-/rfdc-1.1.2/e6e72d74f5dc39de8f538f65e00c36c18018e349.tgz",
    "fileCount": 4,
    "unpackedSize": 13612,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbAWAtCRA9TVsSAnZWagAA95kQAJHCtwuklD/8mp2IosIX\ne+m+S7jnCsMj8/ZPqlAdgqpBOpC6VEi74PZJ0x84/xbpwgvy3QCbvaTDCWoV\nqMb6ticneN/5L8NmzJEpU2/O8B0hgiWBc04KqZSC/A27v1PBJAanuVXqtFU0\nlJ0tIH5/zrm7CYfzgtyZZkxEOaSclspTV4nekIZt/jX5QNx8i2nVzpkFr+3+\ny+xzGQUvNWtuw4egvxYnDwxzAZNaU9UBBLE2Skx0Ok2pVcgeq5XepZZ5Fqtj\nOFbbZ0Zv8wEcyet36x/HWwHhzQrTyndm3Khy+h1Am6uomCAH5IVbVcJ1Yuxz\nrN8zAk1wNWd9W5dqqmDHdl7wlToHX6tjlq8ESBr/Z4Eo3zYDgBL5Pv8SDuMa\nwEs7A1yj32AQify9BYMvCDrI7IlbHIZ4B0ZkHm189qqjEdu70mM8j/bd5N5D\n2uXQ560hWYCEtJpdwDdYQrtva6Hc+D2EiyaQxFEpTDOnClCdTO/mG5Gkjgl9\nKVd+7xV1FAstIHwekcm8WYuW5apsVGPVV0+gqw7EpbY7XZNG3WmVJfQWXO4F\n1V/uTuDLjtcBGWUA6bhI2aL465gQbeQ4L9iPfT8xge6AjDPiKj8JxqVA6R5J\nVtigY+F2829tqQDf28rPe1aM32IJpFlKKgcgqD/OimNDCScwncGeMbTIXnZS\nOS6s\r\n=62vu\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "4d913ed2fcacfee041456515b828a49cacd2a4ff",
  "homepage": "https://github.com/davidmarkclements/rfdc#readme",
  "keywords": [
    "object",
    "obj",
    "properties",
    "clone",
    "copy",
    "deep",
    "recursive",
    "key",
    "keys",
    "values",
    "prop",
    "deep-clone",
    "deepclone",
    "deep-copy",
    "deepcopy",
    "fast",
    "performance",
    "performant",
    "fastclone",
    "fastcopy",
    "fast-clone",
    "fast-deep-clone",
    "fast-copy",
    "fast-deep-copy"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "davidmarkclements",
      "email": "huperekchuno@googlemail.com"
    }
  ],
  "name": "rfdc",
  "optionalDependencies": {},
  "readme": "# rfdc\n\nReally Fast Deep Clone\n\n## Usage\n\n```js\nconst clone = require('rfdc')()\nclone({a: 1, b: {c: 2}}) // => {a: 1, b: {c: 2}}\n```\n\n## API\n\n### `require('rfdc')(opts = { proto: false, circles: false }) => clone(obj) => obj2`\n\n#### `proto` option\n\nIt's faster to allow enumerable properties on the prototype \nto be copied into the cloned object (not onto it's prototype,\ndirectly onto the object).\n\nTo explain by way of code: \n\n```js\nrequire('rfdc')({ proto: false })(Object.create({a: 1})) // => {}\nrequire('rfdc')({ proto: true })(Object.create({a: 1})) // => {a: 1}\n``` \n\nIf this behavior is acceptable, set\n`proto` to `true` for an additional 15% performance boost\n(see benchmarks).\n\n#### `circles` option\n\nKeeping track of circular references will slow down performance\nwith an additional 40%-50% overhead (even if an object doesn't have\nany circular references, the tracking is the cost). By default if \nan object with a circular reference is passed in, `rfdc` will throw (similar to\nhow `JSON.stringify` would throw). \n\nUse the `circles` option to detect and preserve circular references\nin the object. If performance is important, try removing the \ncircular reference from the object (set to `undefined`) and then\nadd it back manually after cloning instead of using this option.\n\n### Types\n\n`rdfc` clones all JSON types:\n\n* `Object` \n* `Array`\n* `Number`\n* `String`\n* `null`\n\nWith additional support for:\n\n* `Date` (copied)\n* `undefined` (copied)\n* `Function` (referenced)\n* `AsyncFunction` (referenced)\n* `GeneratorFunction` (referenced)\n* `arguments` (copied to a normal object)\n\nAll other types have output values that match the output\nof `JSON.parse(JSON.stringify(o))`.\n\nFor instance: \n\n```js\nconst rdfc = require('rdfc')()\nconst err = Error()\nerr.code = 1\nJSON.parse(JSON.stringify(e)) // {code: 1}\nrdfc(e) // {code: 1}\n\nJSON.parse(JSON.stringify(new Uint8Array([1, 2, 3]))) //  {'0': 1, '1': 2, '2': 3 }\nrdfc(new Uint8Array([1, 2, 3])) //  {'0': 1, '1': 2, '2': 3 }\n\nJSON.parse(JSON.stringify({rx: /foo/})) // {rx: {}}\nrdfc({rx: /foo/}) // {rx: {}}\n```\n\n## Benchmarks\n\n```sh\nnpm run bench\n```\n\n```\nbenchDeepCopy*100: 687.014ms\nbenchLodashCloneDeep*100: 1803.993ms\nbenchFastCopy*100: 929.259ms\nbenchRfdc*100: 565.133ms\nbenchRfdcProto*100: 484.401ms\nbenchRfdcCircles*100: 846.672ms\nbenchRfdcCirclesProto*100: 752.908ms\n```\n\n## Tests\n\n```sh\nnpm test\n```\n\n```\n148 passing (365.985ms)\n```\n\n### Coverage\n\n```sh\nnpm run cov \n```\n\n```\n----------|----------|----------|----------|----------|-------------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |\n----------|----------|----------|----------|----------|-------------------|\nAll files |      100 |      100 |      100 |      100 |                   |\n index.js |      100 |      100 |      100 |      100 |                   |\n----------|----------|----------|----------|----------|-------------------|\n```\n\n## License\n\nMIT",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davidmarkclements/rfdc.git"
  },
  "scripts": {
    "bench": "node benchmark",
    "cov": "tap --cov test",
    "cov-ui": "tap --coverage-report=html test",
    "lint": "standard",
    "test": "tap -R min test"
  },
  "version": "1.1.2"
}
